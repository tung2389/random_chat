{"version":3,"sources":["random_chat_pages/Starting_page.js","random_chat_pages/Waiting_page.js","message/Partner_message.js","message/Your_message.js","message/Type_bar.js","message/Send_button.js","message/Exiting_nofitication.js","message/Info.js","random_chat_pages/Chat_page.js","App.js","serviceWorker.js","index.js"],"names":["Starting_page","classes","this","props","react_default","a","createElement","AppBar_default","position","root","positionStatic","className","TextField_default","onChange","change_name","label","Button_default","color","variant","onClick","connect","Component","withStyles","height","text-align","background","Waiting_page","align","Partner_message","Paper_default","elevation","partner_message","content","max-width","overflow-wrap","display","border-radius","padding-top","padding-bottom","padding-right","padding-left","Your_message","Type_bar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","length","count_char","bind","assertThisInitialized","resize","_this2","input_holder","ReactDOM","findDOMNode","refs","inp","addEventListener","event","e","change_message","target","value","setState","distance","style","top","initial_height","console","log","initial_top","overflow","keyCode","preventDefault","Math","ceil","caculate_resize","_this3","ref","multiline","Send_button","socket","message","update_all_message","emit","_this$props","Fab_default","handle_message","aria-label","Add_default","Exiting_notification","notification","width","padding","Info","Your_name","Partner_name","your_name","partner_name","Chat_page","all_message","partner_exit","handle_exiting","on","data","new_all_message","slice","push","key","uuidv1","new_message","Exiting_nofitication","exit","message_Info","Type_bar_Type_bar","Send_button_Send_button","io","App","username","main_component","random_chat_pages_Starting_page","handle_waiting","handle_match","check","Waiting_page_Waiting_page","Chat_page_Chat_page","name","window","confirm","Boolean","location","hostname","match","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d7eca4ce.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../App.css';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n  positionStatic: {\r\n    'height': '60px',\r\n    'text-align': 'center',\r\n    'background': 'deepskyblue'\r\n  }\r\n};\r\n\r\nclass Starting_page extends Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n      <AppBar position = \"static\" classes={{ root: classes.positionStatic }}> This app helps you to talk with a random person</AppBar>\r\n      <div className = \"center\">\r\n        <h6>Let connect with everyone</h6>\r\n        <TextField onChange = {this.props.change_name} label = \"Enter your name\" className = \"input\"></TextField>\r\n        <div className = \"btn_holder\"> \r\n        <Button color = \"primary\" variant = \"contained\" onClick = {this.props.connect}>Find friends</Button>\r\n        </div>\r\n      </div>\r\n      <h6>Tips: if you don't find anyone or you are too lonely, you can open two or more chrome tabs to chat with yourself</h6>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Starting_page);\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Waiting_page extends Component {\r\n  render() {\r\n    return (\r\n      <div align = \"center\">\r\n        Please wait, we are searching for your partner\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport '../App.css';\r\n\r\nconst styles = {\r\n  partner_message: {\r\n    'max-width': '400px',\r\n    'background': 'aliceblue',\r\n    'overflow-wrap': 'break-word',\r\n    'display': 'inline-block',\r\n    'border-radius': '8px',\r\n    'padding-top': '10px',\r\n    'padding-bottom': '10px',\r\n    'padding-right': '20px',\r\n    'padding-left': '20px',\r\n    'color': 'cadetblue'\r\n  }\r\n};\r\n\r\nclass Partner_message extends Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className = \"Partner_message\">\r\n      {/* your partner is {this.props.name} and your room is {this.props.room} */}\r\n      <Paper elevation={4} classes={{ root: classes.partner_message }}>\r\n      {this.props.content}\r\n    </Paper>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Partner_message);","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport '../App.css'\r\nconst styles = {\r\n  partner_message: {\r\n    'max-width': '400px',\r\n    'background': 'cornflowerblue',\r\n    'overflow-wrap': 'break-word',\r\n    'display': 'inline-block',\r\n    'border-radius': '8px',\r\n    'color': 'white',\r\n    'padding-top': '10px',\r\n    'padding-bottom': '10px',\r\n    'padding-right': '20px',\r\n    'padding-left': '20px'\r\n  }\r\n};\r\n\r\nclass Your_message extends Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className = \"Your_message\" align = \"right\">\r\n      {/* your partner is {this.props.name} and your room is {this.props.room} */}\r\n      <Paper elevation={4} classes={{ root: classes.partner_message }}>\r\n      {this.props.content}\r\n    </Paper>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Your_message);","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport '../App.css';\r\n\r\nconst initial_top = 45;\r\nconst initial_height = 50;\r\nconst max_in_one_row = 39;\r\nconst gap_between_line = 16;\r\nconst max_line = 4;\r\nexport default class Type_bar extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      //length = 1 to prevent distance = 0\r\n      length:1\r\n    }\r\n    this.count_char = this.count_char.bind(this);\r\n    this.resize = this.resize.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    let input_holder = ReactDOM.findDOMNode(this.refs.inp);\r\n    // let input = ReactDOM.findDOMNode(this.refs.real_inp);\r\n    input_holder.addEventListener(\"keydown\",(event) => this.resize(event,input_holder));\r\n  }\r\n\r\n  count_char(e,change_message){\r\n    //Prevent distance = 0\r\n    if(e.target.value.length === 0)\r\n    this.setState({length:e.target.value.length + 1});\r\n    else\r\n    this.setState({length:e.target.value.length});\r\n    // console.log(e.target.value.length);\r\n    change_message(e.target.value);\r\n  }\r\n\r\n  caculate_resize(distance,input_holder){\r\n\r\n    // console.log(distance);\r\n    if(distance <= max_line){\r\n    //Expend height to the bottom\r\n    input_holder.style.height = initial_height + gap_between_line * (distance - 1) + 'px';\r\n    //Move the input up to get on well with the bottom\r\n    input_holder.style.top = initial_top - gap_between_line * (distance - 1) + 'px';\r\n    }\r\n\r\n    else{\r\n      input_holder.style.height = initial_height + gap_between_line * max_line - 20 + 'px';\r\n      console.log(initial_height,gap_between_line,max_line);\r\n      input_holder.style.top = initial_top - gap_between_line * (max_line + 1) + 20 + 'px' ;\r\n      input_holder.style.overflow = 'auto';\r\n      // console.log(input_holder.style.height);\r\n    }\r\n  }\r\n\r\n  resize(event,input_holder/*,input*/){\r\n    //If Enter, block\r\n    //console.log(gap_between_line * (Math.ceil(this.state.length / max_in_one_row)));\r\n    if(event.keyCode === 13)\r\n    {\r\n      event.preventDefault();\r\n    }\r\n\r\n    else\r\n    {\r\n    let distance = Math.ceil(this.state.length / max_in_one_row);\r\n    this.caculate_resize(distance,input_holder);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n        <div className = \"input2_holder\" ref = \"inp\">\r\n        <TextField onChange = {(e) => this.count_char(e,this.props.change_message)} className = \"input2\" multiline = {true}></TextField>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport '../App.css';\r\n\r\nexport default class Send_button extends Component {\r\n  constructor(props){\r\n      super(props);\r\n  }\r\n  handle_message(socket,message,update_all_message){\r\n      //Send your message to partner\r\n      socket.emit(\"send message\",message);\r\n      //Update your message in the screen\r\n      update_all_message();\r\n  }\r\n  render() {\r\n    const { socket, message, update_all_message} = this.props;\r\n    // console.log(this.props);\r\n    return (\r\n        <div className = \"btn_send_holder\">\r\n        <Fab onClick = {() => this.handle_message(socket,message,update_all_message)} color=\"primary\" aria-label=\"Add\">\r\n        <AddIcon />\r\n        </Fab>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n    notification: {\r\n      'width' : '550px',\r\n      'background': '#d32f2f',\r\n      'overflow-wrap': 'break-word',\r\n      'display': 'inline-block',\r\n      'border-radius': '4px',\r\n      'color': 'white',\r\n      'padding': '6px 24px'\r\n    }\r\n};\r\n\r\nclass Exiting_notification extends Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n        <div className = \"exiting_notification\">\r\n        <Paper elevation={4} classes={{ root: classes.notification }}>\r\n        Your partner has disconnected. If you want to leave, please click the \"Leave the chat\" button\r\n        </Paper>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Exiting_notification);\r\n","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport '../App.css';\r\n\r\nconst styles = {\r\n    your_name: {\r\n      'background': '#1976d2',\r\n      'overflow-wrap': 'break-word',\r\n      'display': 'inline-block',\r\n      'border-radius': '4px',\r\n      'color': 'white',\r\n      'padding': '6px 24px'\r\n    },\r\n    partner_name: {\r\n      'background': '#ffa000',\r\n      'overflow-wrap': 'break-word',\r\n      'display': 'inline-block',\r\n      'border-radius': '4px',\r\n      'color': 'white',\r\n      'padding': '6px 24px'\r\n    }\r\n};\r\n\r\nclass Info extends Component {\r\n  render() {\r\n    const {Your_name, Partner_name,classes} = this.props;\r\n    return (\r\n      <div className = \"Info\">\r\n        <Paper elevation={4} classes={{ root: classes.your_name }}>\r\n        {Your_name}\r\n        </Paper>\r\n        <h3>And</h3>\r\n        <Paper elevation={4} classes={{ root: classes.partner_name }}>\r\n        {Partner_name}\r\n        </Paper>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Info);","import React, { Component } from 'react'\r\nimport Partner_message from '../message/Partner_message';\r\nimport Your_message from '../message/Your_message';\r\nimport Type_bar from '../message/Type_bar';\r\nimport Send_button from '../message/Send_button';\r\nimport Button from '@material-ui/core/Button';\r\nimport Exiting_notification from '../message/Exiting_nofitication';\r\nimport Info from '../message/Info';\r\nimport uuidv1 from 'uuid/v1';\r\nimport '../App.css';\r\n\r\n\r\nexport default class Chat_page extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      message:\"\",\r\n      all_message: [],\r\n      partner_exit: false\r\n    }\r\n    this.change_message = this.change_message.bind(this);\r\n    this.update_all_message = this.update_all_message.bind(this);\r\n    this.notification = this.notification.bind(this);\r\n    this.handle_exiting = this.handle_exiting.bind(this);\r\n  }\r\n\r\n  componentWillMount(){\r\n    const { socket } = this.props;\r\n    socket.on('message',(data) => this.update_all_message(Partner_message,data));\r\n    socket.on('Partner disconnected',this.handle_exiting)\r\n  }\r\n  \r\n  handle_exiting(){\r\n    this.setState({partner_exit: true});\r\n  }\r\n\r\n  update_all_message(Component,data){\r\n    let new_all_message = this.state.all_message.slice();\r\n    new_all_message.push(<Component key = {uuidv1()} content = {data} />)\r\n    this.setState({all_message: new_all_message});\r\n  }\r\n\r\n  change_message(new_message){\r\n    this.setState({message:new_message});\r\n    // console.log(new_message);\r\n  }\r\n\r\n  notification(){\r\n    if(this.state.partner_exit){\r\n      return <Exiting_notification />\r\n    }\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { socket } = this.props;\r\n    const { exit } = this.props;\r\n    const { your_name, partner_name } = this.props;\r\n    \r\n    return (\r\n      <div>\r\n      <Info Your_name = {your_name} Partner_name = {partner_name}/>\r\n\r\n      <div className = \"chat_background\">\r\n\r\n      {this.notification()}\r\n\r\n      <div className = \"all_messages\">\r\n      {this.state.all_message}\r\n      </div>\r\n\r\n      <div className = \"bar_and_button\" >\r\n      <Type_bar change_message = {this.change_message}/>\r\n      <Send_button socket = {socket} \r\n                   message = {this.state.message}\r\n                   update_all_message = {() => this.update_all_message(Your_message,this.state.message)}\r\n      />\r\n      </div>\r\n\r\n      <div className = \"exit_button_holder\">\r\n      <Button color = \"secondary\" variant = \"contained\" onClick = {exit}>Leave the chat</Button>\r\n      </div>\r\n\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Starting_page from './random_chat_pages/Starting_page';\r\nimport Waiting_page from './random_chat_pages/Waiting_page';\r\nimport Chat_page from './random_chat_pages/Chat_page';\r\nimport io from 'socket.io-client';\r\n\r\nconst url = 'https://socket-backend.herokuapp.com/';\r\nconst socket = io(url);\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.change_name = this.change_name.bind(this);\r\n    this.connect = this.connect.bind(this);\r\n    this.state = {\r\n      username: '',\r\n      main_component: <Starting_page change_name = {this.change_name} connect = {this.connect}/>\r\n    };\r\n    this.handle_waiting = this.handle_waiting.bind(this);\r\n    this.handle_match = this.handle_match.bind(this);\r\n    this.check = this.check.bind(this);\r\n    this.exit = this.exit.bind(this);\r\n  }\r\n  componentDidMount(){\r\n    socket.on('please wait',this.handle_waiting);\r\n    socket.on('starting chat',(data) => this.handle_match(data));\r\n  }\r\n\r\n  handle_waiting(){\r\n    this.setState({main_component : <Waiting_page/>})\r\n  }\r\n\r\n  handle_match(data){\r\n    this.setState({main_component : <Chat_page your_name = {this.state.username} partner_name = {data.name} socket = {socket} exit = {this.exit}/>})\r\n  }\r\n\r\n  exit(){\r\n    if(window.confirm(\"Do you really want to leave? You cannot see this conversation again\")){\r\n    this.setState({main_component: <Starting_page change_name = {this.change_name} connect = {this.connect}/>})\r\n    socket.emit(\"Partner disconnected\");\r\n    }\r\n  }\r\n\r\n  change_name(e){\r\n    this.setState({username : e.target.value});\r\n  }\r\n\r\n  connect(){\r\n    this.setState({main_component : <Waiting_page/>})\r\n    socket.emit('find partner',{name : this.state.username});\r\n  }\r\n\r\n  check(){\r\n    console.log(this.state.username);\r\n  }\r\n\r\n  componentWillMount(){\r\n    \r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n      {this.state.main_component}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}